<div class="card my-4">
  <div class="card-header">
    <h5 class="card-title mb-0">Air Quality</h5>
  </div>
  <div class="card-body text-center">
    <canvas id="airQualityChart"></canvas>
    <!-- <button id="randomizeAQ" class="btn btn-sm btn-primary mt-3">Randomize</button> -->
    <div id="randomizeAQ"></div>
  </div>
</div>

<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
<script src="https://cdn.jsdelivr.net/npm/chartjs-plugin-annotation"></script>
<script>
  // ========================
  // Constants
  // ========================
  const COLORS = ['rgb(140, 214, 16)', 'rgb(239, 198, 0)', 'rgb(231, 24, 49)'];
  const MIN = 0;
  const MAX = 500; // giả định thang đo AQI (bạn chỉnh theo chuẩn bạn muốn)

  // Random generator
  function rand(min, max) {
    return Math.floor(Math.random() * (max - min + 1)) + min;
  }

  // Determine color index
  function index(perc) {
    return perc < 100 ? 0 : perc < 200 ? 1 : 2;
  }

  // Normalize giá trị về %
  function normalize(value) {
    let perc = (value / MAX) * 100;
    return Math.min(100, Math.max(0, perc));
  }

  // Initial value
  let value = rand(MIN, MAX);

  // ========================
  // Dataset
  // ========================
  const data = {
    datasets: [{
      data: [normalize(value), 100 - normalize(value)],
      backgroundColor(ctx) {
        if (ctx.type !== 'data') return;
        if (ctx.index === 1) return 'rgb(234, 234, 234)'; // background track
        return COLORS[index(ctx.raw)];
      },
      borderWidth: 0,
      cutout: "70%"
    }]
  };

  // ========================
  // Annotation
  // ========================
  const annotation = {
    type: 'doughnutLabel',
    content: ({chart}) => [
      chart.data.datasets[0].data[0].toFixed(0) + ' %',
      'Air Quality'
    ],
    drawTime: 'beforeDraw',
    position: { y: '-50%' },
    font: [{size: 40, weight: 'bold'}, {size: 16}],
    color: ({chart}) => [COLORS[index(chart.data.datasets[0].data[0])], 'grey']
  };

  // ========================
  // Config
  // ========================
  const config = {
    type: 'doughnut',
    data,
    options: {
      aspectRatio: 2,
      circumference: 180,
      rotation: -90,
      plugins: {
        legend: { display: false },
        annotation: {
          annotations: { annotation }
        }
      }
    }
  };

  // ========================
  // Init chart
  // ========================
  const ctxAQ = document.getElementById('airQualityChart');
  const airQualityChart = new Chart(ctxAQ, config);

  // ========================
  // Actions
  // ========================
  document.getElementById("randomizeAQ").addEventListener("click", () => {
    const val = rand(MIN, MAX);
    updateGauge(val);
  });

  // ========================
  // Socket.IO update
  // ========================
  socket.on("new_environment", (env) => {
    // lấy chỉ số pm25 làm giá trị gauge
    updateGauge(env.pm25);
  });

  // ========================
  // Update function
  // ========================
  function updateGauge(val) {
    const perc = normalize(val);
    airQualityChart.data.datasets[0].data[0] = perc;
    airQualityChart.data.datasets[0].data[1] = 100 - perc;
    airQualityChart.update();
  }
</script>
